{"version":3,"sources":["Search/Search.js","Components/BoxShadow/BoxShadow.js","List/List.js","App.js","reportWebVitals.js","index.js"],"names":["Search","onChange","searchText","className","e","target","value","placeholder","type","BoxShadow","List","id","keywords","propertiesUsed","selectorsUsed","filter","component","keywordFound","propertyFound","selectorFound","map","keyword","includes","property","selector","filteredData","App","useState","setSearchText","text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAkBeA,MAhBf,YAA2C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC1B,OACE,qBAAKC,UAAU,SAAf,SACE,iFAEE,uBACEF,SAAU,SAACG,GAAD,OAAOH,EAASG,EAAEC,OAAOC,QACnCC,YAAY,4DACZC,KAAK,OACLF,MAAOJ,U,MCJFO,MAJf,WACE,OAAO,qBAAKN,UAAU,YAAf,uC,MCkDMO,MAnDf,YAA+B,IAAfR,EAAc,EAAdA,WASd,OACE,qBAAKC,UAAU,OAAf,SATW,CACX,CACEQ,GAAI,YACJC,SAAU,CAAC,UAAW,QACtBC,eAAgB,CAAC,cACjBC,cAAe,KAMZC,QAAO,SAACC,GACP,IAAIC,GAAe,EACfC,GAAgB,EAChBC,GAAgB,EAqBpB,OAnBAH,EAAUJ,SAASQ,KAAI,SAACC,GAItB,OAHIA,EAAQC,SAASpB,KACnBe,GAAe,GAEV,QAETD,EAAUH,eAAeO,KAAI,SAACG,GAI5B,OAHIA,EAASD,SAASpB,KACpBgB,GAAgB,GAEX,QAETF,EAAUF,cAAcM,KAAI,SAACI,GAI3B,OAHIA,EAASF,SAASpB,KACpBiB,GAAgB,GAEX,WAGLF,GAAgBC,GAAiBC,MAMtCC,KAAI,SAACK,GAAD,OACH,8BACuB,cAApBA,EAAad,IAAsB,cAAC,EAAD,KAD5Bc,EAAad,UCxBlBe,MAjBf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNzB,EADM,KACM0B,EADN,KAGb,OACE,sBAAKzB,UAAU,MAAf,UACE,iCACE,+CAEF,0BAASA,UAAU,yBAAnB,UACE,cAAC,EAAD,CAAQF,SAAU,SAAC4B,GAAD,OAAUD,EAAcC,MAC1C,cAAC,EAAD,CAAM3B,WAAYA,OAEpB,sECLS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5542e7d3.chunk.js","sourcesContent":["import \"./Search.css\";\n\nfunction Search({ onChange, searchText }) {\n  return (\n    <div className=\"Search\">\n      <label>\n        Search for a keyword, property, or selector:\n        <input\n          onChange={(e) => onChange(e.target.value)}\n          placeholder=\"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\"\n          type=\"text\"\n          value={searchText}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Search;\n","import \"./BoxShadow.css\";\nimport React from \"react\";\n\nfunction BoxShadow() {\n  return <div className=\"BoxShadow\">BoxShadow component here</div>;\n}\n\nexport default BoxShadow;\n","import BoxShadow from \"../Components/BoxShadow/BoxShadow\";\nimport \"./List.css\";\n\nfunction List({ searchText }) {\n  const data = [\n    {\n      id: \"boxShadow\",\n      keywords: [\"example\", \"test\"],\n      propertiesUsed: [\"box-shadow\"],\n      selectorsUsed: [],\n    },\n  ];\n  return (\n    <div className=\"List\">\n      {data\n        .filter((component) => {\n          let keywordFound = false;\n          let propertyFound = false;\n          let selectorFound = false;\n\n          component.keywords.map((keyword) => {\n            if (keyword.includes(searchText)) {\n              keywordFound = true;\n            }\n            return null;\n          });\n          component.propertiesUsed.map((property) => {\n            if (property.includes(searchText)) {\n              propertyFound = true;\n            }\n            return null;\n          });\n          component.selectorsUsed.map((selector) => {\n            if (selector.includes(searchText)) {\n              selectorFound = true;\n            }\n            return null;\n          });\n\n          if (keywordFound || propertyFound || selectorFound) {\n            return true;\n          } else {\n            return false;\n          }\n        })\n        .map((filteredData) => (\n          <div key={filteredData.id}>\n            {filteredData.id === \"boxShadow\" && <BoxShadow />}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default List;\n","import \"./App.css\";\nimport Search from \"./Search/Search\";\nimport List from \"./List/List\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [searchText, setSearchText] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>CSS Library</h1>\n      </header>\n      <section className=\"App__content-container\">\n        <Search onChange={(text) => setSearchText(text)} />\n        <List searchText={searchText} />\n      </section>\n      <footer>No copyright, help yourself!</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}